!function(){"use strict";var e=class{constructor(e,t,s){let{name:o,link:i}=e;this._name=o,this._link=i,this._cardSelector=t,this._handleImagePreview=()=>s({link:i,name:o})}_handleLikeButton=()=>{this._likeButton.classList.toggle("card__like-button_active")};setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeButton),this._deleteButton.addEventListener("click",this._handleDeleteCard),this._cardImage.addEventListener("click",(()=>{this._handleImagePreview()}))}_handleDeleteCard=e=>{this._cardElement.remove(),this._cardElement=null};getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this.setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._errorClass=e.errorClass,this._inputErrorClass=e.inputErrorClass,this._inactiveButtonClass=e.inactiveButtonClass,this.formElement=t,this._inputList=Array.from(this.formElement.querySelectorAll(this._inputSelector)),this._submitButton=this.formElement.querySelector(this._submitButtonSelector)}enableValidation(){this.formElement.addEventListener("submit",(e=>{e.preventDefault(),this._disableButton()})),this.setEventListeners()}_showInputError(e,t){const s=this.formElement.querySelector(`#${e.id}-error`);e.classList.add(this._errorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this.formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._errorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}_disableButton(){this._submitButton.setAttribute("disabled",!0),this._submitButton.classList.add(this._inactiveButtonClass)}setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close"),this.close=this.close.bind(this),this._handleEscUp=this._handleEscUp.bind(this),this._handleOverlayClick=this._handleOverlayClick.bind(this),this._isEscEvent=this._isEscEvent.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscUp),this._closeButton.addEventListener("click",this.close),this._popupElement.addEventListener("mousedown",this._handleOverlayClick)}_isEscEvent=(e,t)=>{"Escape"===e.key&&t()};_handleEscUp=e=>{e.preventDefault(),this._isEscEvent(e,this.close)};_handleOverlayClick(e){e.target===this._popupElement&&this.close()}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscUp),this._closeButton.removeEventListener("click",this.close),this._popupElement.removeEventListener("mousedown",this._handleOverlayClick)}}class o extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=s,this._handleSubmit=this._handleSubmit.bind(this)}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}_handleSubmit(e){e.preventDefault(),this._handleFormSubmit(this._getInputValues())}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}open(){super.open(),this._popupForm.addEventListener("submit",this._handleSubmit)}close(){super.close(),this._popupForm.removeEventListener("submit",this._handleSubmit),this._popupForm.reset()}}document.querySelector(".modal__form"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list");const i=document.querySelector("#profile-edit-modal"),r=document.querySelector(".profile__edit-button"),n=document.querySelector("#add-card-modal").querySelector(".modal__form"),l=(document.querySelector(".cards__list"),i.querySelector(".modal__form")),a=document.querySelector("#preview-image"),c=document.querySelector(".profile__add-button"),u=(document.querySelector("#profile-title"),document.querySelector("#profile-description"),a.querySelector(".modal__image"),a.querySelector(".modal__image-name"),l.querySelector("#profile-name")),m=l.querySelector("#profile-about"),d=(n.querySelector("#card-name"),n.querySelector("#card-about"),document.querySelector("#profile-name"),document.querySelector("#profile-about"),document.querySelectorAll(".modal__close"),document.querySelectorAll(".modal"),new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Bries",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=v(e);d.addItem(t.getView())}},".cards__list")),_=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._name=document.querySelector("#profile-title"),this._description=document.querySelector("#profile-description")}getUserInfo(){return{name:this._name.textContent,job:this._description.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._name.textContent=t,this._description.textContent=s}}({nameSelector:"#profile__title",jobSelector:"#profile__description"}),p=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this.popupImage=this._popupElement.querySelector(".modal__image"),this.popupImageTitle=this._popupElement.querySelector(".modal__image-name")}open(e){let{name:t,link:s}=e;super.open(),this.popupImage.src=s,this.popupImageTitle.textContent=t,this.popupImage.alt=t}}({popupSelector:"#preview-image"}),h=new o({popupSelector:"#add-card-modal",handleFormSubmit:function(e){let{title:t,url:s}=e;const o=v({name:t,link:s});d.addItem(o.getView()),h.close()}}),S=new o({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){_.setUserInfo(e),S.close()}}),E={};function v(t){return new e(t,"#card-template",y)}function y(e){p.open({name:e.name,link:e.link})}var f;f={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(f.formSelector)).forEach((e=>{const s=new t(f,e),o=e.getAttribute("name");E[o]=s,s.enableValidation()})),c.addEventListener("click",(function(){h.open()})),r.addEventListener("click",(function(){const{name:e,job:t}=_.getUserInfo();u.value=e,m.value=t,S.open()})),d.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,